// <auto-generated />
using IbiMovie.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IbiMovie.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230413223045_InitialSeeding")]
    partial class InitialSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IbiMovie.Core.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Actor 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Actor 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Actor 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Actor 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Actor 5"
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ReleasedYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleasedYear = 0,
                            Title = "Movie 1"
                        },
                        new
                        {
                            Id = 2,
                            ReleasedYear = 0,
                            Title = "Movie 2"
                        },
                        new
                        {
                            Id = 3,
                            ReleasedYear = 0,
                            Title = "Movie 3"
                        },
                        new
                        {
                            Id = 4,
                            ReleasedYear = 0,
                            Title = "Movie 4"
                        },
                        new
                        {
                            Id = 5,
                            ReleasedYear = 0,
                            Title = "Movie 5"
                        },
                        new
                        {
                            Id = 6,
                            ReleasedYear = 0,
                            Title = "Movie 6"
                        },
                        new
                        {
                            Id = 7,
                            ReleasedYear = 0,
                            Title = "Movie 7"
                        },
                        new
                        {
                            Id = 8,
                            ReleasedYear = 0,
                            Title = "Movie 8"
                        },
                        new
                        {
                            Id = 9,
                            ReleasedYear = 0,
                            Title = "Movie 9"
                        },
                        new
                        {
                            Id = 10,
                            ReleasedYear = 0,
                            Title = "Movie 10"
                        },
                        new
                        {
                            Id = 11,
                            ReleasedYear = 0,
                            Title = "Movie 11"
                        },
                        new
                        {
                            Id = 12,
                            ReleasedYear = 0,
                            Title = "Movie 12"
                        },
                        new
                        {
                            Id = 13,
                            ReleasedYear = 0,
                            Title = "Movie 13"
                        },
                        new
                        {
                            Id = 14,
                            ReleasedYear = 0,
                            Title = "Movie 14"
                        },
                        new
                        {
                            Id = 15,
                            ReleasedYear = 0,
                            Title = "Movie 15"
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 8,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 9,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 10,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 11,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 12,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 13,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 14,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 15,
                            ActorId = 5
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.MovieActor", b =>
                {
                    b.HasOne("IbiMovie.Core.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IbiMovie.Core.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("IbiMovie.Core.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("IbiMovie.Core.Movie", b =>
                {
                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
