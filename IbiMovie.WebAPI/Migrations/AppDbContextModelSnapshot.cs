// <auto-generated />
using IbiMovie.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IbiMovie.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IbiMovie.Core.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Morgan Freeman"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Brad Pitt"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Keanu Reeves"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Leonardo DiCaprio"
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ReleasedYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleasedYear = 1994,
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 2,
                            ReleasedYear = 2008,
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 3,
                            ReleasedYear = 1994,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 4,
                            ReleasedYear = 1994,
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = 5,
                            ReleasedYear = 1999,
                            Title = "Fight Club"
                        },
                        new
                        {
                            Id = 6,
                            ReleasedYear = 2010,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 7,
                            ReleasedYear = 1999,
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 8,
                            ReleasedYear = 2001,
                            Title = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = 9,
                            ReleasedYear = 1972,
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 10,
                            ReleasedYear = 1991,
                            Title = "The Silence of the Lambs"
                        },
                        new
                        {
                            Id = 11,
                            ReleasedYear = 1990,
                            Title = "Goodfellas"
                        },
                        new
                        {
                            Id = 12,
                            ReleasedYear = 1999,
                            Title = "The Sixth Sense"
                        },
                        new
                        {
                            Id = 13,
                            ReleasedYear = 1998,
                            Title = "Saving Private Ryan"
                        },
                        new
                        {
                            Id = 14,
                            ReleasedYear = 2000,
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = 15,
                            ReleasedYear = 2006,
                            Title = "The Departed"
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 15,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 13,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 12,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 8,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 10,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 15,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 5
                        });
                });

            modelBuilder.Entity("IbiMovie.Core.MovieActor", b =>
                {
                    b.HasOne("IbiMovie.Core.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IbiMovie.Core.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("IbiMovie.Core.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("IbiMovie.Core.Movie", b =>
                {
                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
